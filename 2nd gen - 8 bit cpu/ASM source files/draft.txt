
// 0x20	space
// 0x3d	=
// 0x78	x
// 0xd	CR


//JP :main_init
JP :count_init

// Test counting from 0 to 99

count_init:
	LD H, 0x0
	LD C, 0x64
	LD L, 0XD
count_loop:
	LD A, H
	CALL :print_number_2digit
	LD A, 0x20
	OUT 0, A
	OUT 0, L
	
	INC H
	
	// if(H == 100) count_init else count_loop
	LD B, H
	SUB B, C
	JP Z, :count_init
	JP :count_loop

	
	
// Test multiplication
	
main_init:
	LD H, 0x0
	LD L, 0x0

main_loop:
	LD A, H
	LD B, L
	CALL :multiply
	LD C, A

	// print first number
	LD A, H
	CALL :print_number_2digit

	// print 'x'	
	LD A, 0x78
	OUT 0, A

	// print second number
	LD A, L
	CALL :print_number_2digit

	// print '='	
	LD A, 0x3d
	OUT 0, A

	// print result
	LD A, C
	CALL :print_number_2digit

	// next line	
	LD A, 0xd
	OUT 0, A
	
	INC L
	// if(L == 11) next_h
	LD A, L
	LD C, 0xb
	SUB A, C
	JP Z, :next_h
	JP :main_loop

next_h:
	LD L, 0x0
	INC H
	// if(H == 11) main_end
	LD A, H
	LD C, 0xb
	SUB A, C
	JP Z, :main_end
	JP :main_loop
	
main_end:
	JP :main_end


// multiply A x B, result in A
multiply:
	LD D, A
	LD A, 0x0
	DNW B
mu_loop:
	JP Z, :mu_end
	ADD A, D
	DEC B
	JP :mu_loop
mu_end:
	RET




// print out number in A to LCD display
// (0 <= A <=9)
print_number_1digit:
	LD F, 0x30
	ADD A, F
	OUT 0, A
	RET


	
// print out number in A register to LCD display
// valid range: 0-99
print_number_2digit:
	LD E, H
	LD D, 0xa
	// H: Number of tens
	LD H, 0x0

pn_loop:
	//if(A < 10) pn_end else { A -= 10; H++; }
	LD B, A
	SUB A, D
	JP C, :pn_end

	//A -= 10
	SUB B, D
	LD A, B
	INC H
	JP :pn_loop
	
pn_end:
	LD F, 0x30

	DNW H
	JP Z, :pn_last_dig

	ADD H, F
	LD A, H
	OUT 0, A

pn_last_dig:
	ADD B, F
	LD A, B
	OUT 0, A
	
	LD H, E

	RET

	